---
title: "Estimation Methods"
author: "Ward B. Eiling"
format: html
execute:
  message: false
  warning: false
embed-resources: true
---

## Introduction

In this document, we will compare estimation methods in the context of clustered data (measurements within invididuals): generalized estimating equations (GEE) and mixed linear models (MLM).

Let's first install and load necessary packages

```{r}
# Load packages
library(dagitty)
library(tidyverse)
library(ggdag)
library(purrr)
library(qgraph)
library(pcalg)
library(sjPlot)
library(lme4)
library(geex)
library(gee)
library(MASS)
library(jtools)
```

For all examples, we will use the same basic DAG, where we are estimating the effect of $X_t$ (sleep-problems) on $Y_t$ (anxiety). This implies that we are investigating the effect of sleep problems on anxiety within the same timepoint (we could also use a lagged effect, but we will keep it simple for now).

```{r}
dag <- dagitty('dag {
  "X_t" -> "Y_t"
}')

plot(dag)
```

## Scenario 1: SCM with random intercept and a time-varying $X$ *without* between-person differences in $\bar{X}_i$ (a mean of 0 for everyone)

For the first DGM, using the multilevel notation (Raudenbusch and Bryk, 2002), we can specify the within person equation

$$Y_{it} = \beta_{0i} + \beta_1 X_{it} + e_{it} \quad \text{where} \quad e_{it} \sim \mathcal{N}(0, \sigma^2_{e}), \text{iid}$$

and between person equation

$$\beta_{0i} = \gamma_{00} + u_{0i} \quad \text{where} \quad u_{0i} \sim \mathcal{N}(0, \sigma^2_{u0})$$

By plugging the between person equation into the within-person equation we get the combined expression

$$Y_{it} = \gamma_{00} + u_{0i} + \beta_1 X_{it} + e_{it}$$

where (1) $\gamma_{00}$ is the overall intercept, (2) $\beta_1$ is the fixed slope and (3) $u_{0i}$ is the random intercept for individual $i$.

Given that we want no between person differences in the mean level of $X$ over time and for it to be centered around 0 (i.e., $\bar{X}_{i}= 0$), we may simulate $X_{it}$ as such

$$X_{it} \sim \mathcal{N}(0, \sigma^2_{X})$$

Now we may, for instance, give the parameters arbitrary values

- $\gamma_{00} = 2$
- $\beta_{1}= 0.6$
- $\sigma^2_{u0}= 1$
- $\sigma^2_{e}= 0.2$
- $\sigma^2_{X}= 1$

Let us now simulate data according to data generating model 1

```{r}
# Specify parameters
set.seed(123)  # For reproducibility
n_i <- 10000  # Number of individuals
n_t <- 10  # Number of timepoints
n_obs <- n_i * n_t  # Total number of observations

gamma_00 <- 2
beta_1 <- 0.6
sigma_u0 <- 1
sigma_e <- 0.2 # this may be unrealistic, but we want to see the effect of the estimation method
sigma_X <- 1

# Simulate data
X = rnorm(n_obs, 0, sigma_X)
e = rnorm(n_obs, 0, sigma_e)
u_0i = rnorm(n_i, 0, sigma_u0)


scenario1.data <- tibble(
  id = rep(1:n_i, each = n_t),
  time = rep(1:n_t, times = n_i),
  X = X,
  e = e,
  u_0i = rep(u_0i, each = n_t),
  Y = gamma_00 + u_0i + beta_1 * X + e)
```

Let's plot the first 10 individuals with different colors for each participant and seperate regression lines for each participant

```{r}
scenario1.data %>%
  filter(id <= 5) %>%
  ggplot(aes(x = X, y = Y, group = id)) +
  geom_point(aes(color = as.factor(id))) +
  geom_smooth(method = "lm", se = FALSE, aes(color = as.factor(id))) +
  geom_abline(intercept = gamma_00, slope = beta_1, color = "black", size = 1) +
  theme_minimal()
```

Let's now do the same but with the true regression lines for each individual

```{r}
head(u_0i, 5)

scenario1.data %>%
  filter(id <= 5) %>%
  ggplot(aes(x = X, y = Y, group = id)) +
  geom_point(aes(color = as.factor(id))) +
  geom_abline(intercept = gamma_00, slope = beta_1, color = "black", size = 1) + # overall regression line
  geom_abline(intercept = gamma_00 + u_0i[1], slope = beta_1, color = "red", size = 1) + # for id = 1
  geom_abline(intercept = gamma_00 + u_0i[2], slope = beta_1, color = "orange", size = 1) + # for id = 2
  geom_abline(intercept = gamma_00 + u_0i[3], slope = beta_1, color = "green", size = 1) + # for id = 3
  geom_abline(intercept = gamma_00 + u_0i[4], slope = beta_1, color = "blue", size = 1) + # for id = 4
  geom_abline(intercept = gamma_00 + u_0i[5], slope = beta_1, color = "purple", size = 1) + # for id = 5
  theme_minimal()
```

Let's estimate the effect of $X_t$ on $Y_t$ using MLM

```{r}
scenario1.MLM.1a <- lmer(Y ~ 1 + X + (1 | id), data = scenario1.data, REML = FALSE)
scenario1.MLM.1b <- lmer(Y ~ 1 + time + X + (1 | id), data = scenario1.data, REML = FALSE)
anova(scenario1.MLM.1a, scenario1.MLM.1b)
```

Model 1a is not significantly worse than Model 1b, which makes sense as we did not specify any effect of time.

```{r}
scenario1.MLM.2 <- lmer(Y ~ 1 + X + (X | id), data = scenario1.data, REML = FALSE)
```
The model with the random slope does not convergence ("boundary singular"), which not unexpected as we did not specify a random slope.

Thus, the final model is the random intercept model

```{r}
scenario1.MLM.1a_reml <- lmer(Y ~ 1 + X + (1 | id), data = scenario1.data, REML = TRUE)
scenario1.MLM.1a_mle <- lmer(Y ~ 1 + X + (1 | id), data = scenario1.data, REML = FALSE)
```

Let's now estimate the effect of $X_t$ on $Y_t$ using GEE

```{r}
# displays initial regression estimate of GLM
scenario1.GEE_exch <- gee(Y ~ X, data = scenario1.data, id = id, family = gaussian(), corstr = "exchangeable")
scenario1.GEE_ind <- gee(Y ~ X, data = scenario1.data, id = id, family = gaussian(), corstr = "independence")
scenario1.GEE_ar <- gee(Y ~ X, data = scenario1.data, id = id, family = gaussian(), corstr = "AR-M")
scenario1.GEE_uns <- gee(Y ~ X, data = scenario1.data, id = id, family = gaussian(), corstr = "unstructured") # with n = 100  convergence was not achieved
# scenario1.GEE_fixed <- gee(Y ~ X, data = scenario1.data, id = id, family = gaussian(), corstr = "fixed") # takes very long to converge
```

Let's compare the point estimates

```{r}
# Extracting the coefficients
coefs <- data.frame(
  row.names = c("Intercept", "X"),
  coef_MLM_reml = fixef(scenario1.MLM.1a_reml),
  coef_MLM_mle = fixef(scenario1.MLM.1a_mle),
  coef_GEE_exch = coef(scenario1.GEE_exch),
  coef_GEE_ind = coef(scenario1.GEE_ind),
  coef_GEE_ar = coef(scenario1.GEE_ar),
  coef_GEE_uns = coef(scenario1.GEE_uns))

# Create nice table
knitr::kable(coefs, digits = 3)
```

The point estimates are essentially identical with a large sample size. However, efficiency/convergence rates may differ across working correlation structures, as unstructured did not convergence with $n = 100$.

## Scenario 2: SCM met een random intercept, time-varying $X$ en *met* between-person verschillen in $\bar{X}_{i}$ (de ene proefpersoon heeft een hogere gemiddelde dan een ander over de tijdspunten)

For the second DGM, using the multilevel notation (Raudenbusch and Bryk, 2002), we can specify the within person equation

$$Y_{it} = \beta_{0i} + \beta_1 (X_{it} - \bar{X}_{i}) + e_{it} \quad \text{where} \quad e_{it} \sim \mathcal{N}(0, \sigma^2_{e}), \text{iid}$$

and between person equation

$$\beta_{0i} = \gamma_{00} + u_{0i} \quad \text{where} \quad u_{0i} \sim \mathcal{N}(0, \sigma^2_{u0})$$

By plugging the between person equation into the within-person equation we get the combined expression

$$Y_{it} = \gamma_{00} + u_{0i} + \beta_1 (X_{it} - \bar{X}_{i}) + e_{it}$$

where (1) $\gamma_{00}$ is the overall intercept, (2) $\beta_1$ is the fixed slope and (3) $u_{0i}$ is the random intercept for individual $i$.

Given that we want between person differences in the mean level of $X$ over time, we may simulate $X_{it}$ as such

$$X_{it} = \bar{X}_{i} + e_{X, it} \quad \text{where} \quad e_{X, it} \sim \mathcal{N}(0, \sigma^2_{X})$$

where

$$\bar{X_{i}} \sim \mathcal{N}(\mu_{\bar{X}}, \sigma^2_{\bar{X}})$$

Now we may, for instance, give the parameters arbitrary values
In addition to the arbitrary values we chose for scenario 1

- $\gamma_{00} = 2$
- $\beta_{1}= 0.6$
- $\sigma^2_{u0}= 1$
- $\sigma^2_{e}= 0.2$
- $\sigma^2_{X}= 1$

We now have to also define

- $\mu_{\bar{X}} = 3$
- $\sigma^2_{\bar{X}} = 1$

Let us now simulate data according to data generating model 2



## Scenario 3: SCM with random intercept and a time-varying $X$ *with* between-person differences in $\bar{X}_{i}$ (one participant has a greater mean than another across the timepoints) that are related to the intercept (of $Y$)

...

<!-- # Trash -->

<!-- ## Example 1: Continuous, X (individual level) on Y (occasion level) -->

<!-- Let's simulate clustered data from the SCM -->

<!-- ```{r} -->
<!-- # Parameters -->
<!-- set.seed(123)  # For reproducibility -->
<!-- n_individuals <- 100  # Number of individuals -->
<!-- n_measurements <- 5   # Number of measurements per individual -->
<!-- rho <- 0.7  # Correlation between measurements within an individual -->

<!-- # Generate individual-level covariates (X) -->
<!-- X <- rnorm(n_individuals, mean = 5, sd = 1) -->

<!-- # Correlation matrix (exchangeable structure) -->
<!-- corr_matrix <- matrix(rho, n_measurements, n_measurements) -->
<!-- diag(corr_matrix) <- 1  # Diagonal is 1 -->

<!-- # Simulate repeated measures for each individual -->
<!-- ex1.data <- data.frame() -->
<!-- for (i in 1:n_individuals) { -->
<!--   # Generate errors with the working correlation structure -->
<!--   epsilon_Y <- mvrnorm(1, mu = rep(0, n_measurements), Sigma = corr_matrix) -->

<!--   # Generate Y for this individual across measurement occasions -->
<!--   Y <- 2 + 0.6 * X[i] + epsilon_Y -->

<!--   # Store the data -->
<!--   individual_data <- data.frame( -->
<!--     id = i, -->
<!--     occasion = 1:n_measurements, -->
<!--     X = X[i], -->
<!--     Y = Y -->
<!--   ) -->

<!--   ex1.data <- rbind(ex1.data, individual_data) -->
<!-- } -->

<!-- # Make sure first timepoint is zero (for intercept interpretation) -->
<!-- ex1.data$occasion <- ex1.data$occasion - 1 -->

<!-- # Check the first few rows of the data -->
<!-- head(ex1.data) -->
<!-- ``` -->

<!-- Let's estimate the effect of $X$ on $Y_t$ using MLM -->

<!-- ```{r} -->
<!-- # Model 1a: Intercept only model, random intercept  -->
<!-- ex1.MLM1a <- lmer(Y ~ 1 + (1 | id), data = ex1.data, REML = FALSE)  -->

<!-- # Model 1b: Intercept only model including the predictor time  -->
<!-- ex1.MLM1b <- lmer(Y ~ 1 + occasion + (1 | id), data = ex1.data, REML = FALSE)  -->
<!-- anova(ex1.MLM1a, ex1.MLM1b) # Model 1a is not significantly worse than Model 1b -->

<!-- # Model 2: including remainder of the level 1 predictors  -->
<!-- ex1.MLM2 <- lmer(Y ~ 1 + occasion + X + (1 | id), data = ex1.data, REML = FALSE) -->
<!-- anova(ex1.MLM1b, ex1.MLM2) # Model 1b is significantly worse than Model 2 -->

<!-- # Model 3.1: random slope for time (and add covariance) -->
<!-- ex1.MLM3.1 <- lmer(Y ~ 1 + occasion + X + (occasion | id), data = ex1.data, REML = FALSE) -->
<!-- anova(ex1.MLM2, ex1.MLM3.1) # Model 2 is not significantly worse than Model 3.1 -->
<!-- ``` -->

<!-- Let's estimate the effect of $X$ on $Y$ using GEE -->

<!-- First, we should examine the observed correlation structure for observations within a cluster. -->

<!-- ```{r} -->
<!-- data_wide <- ex1.data %>% -->
<!--   pivot_wider(names_from = occasion, values_from = Y, names_prefix = "Y_") -->

<!-- # Remove the ID column -->
<!-- data_wide_Y <- data_wide %>% dplyr::select(starts_with("Y_")) -->

<!-- # Compute the observed correlation matrix for the measurements across all individuals -->
<!-- observed_corr_matrix <- cor(data_wide_Y, use = "pairwise.complete.obs") -->

<!-- # Display the observed correlation matrix -->
<!-- observed_corr_matrix -->
<!-- ``` -->

<!-- It seems to be more or less exchangeable, which is what we specified. -->

<!-- ```{r} -->
<!-- # displays initial regression estimate of GLM -->
<!-- ex1.GEE_exch <- gee(Y ~ X + occasion, data = ex1.data, id = id, family = gaussian(), corstr = "exchangeable") -->
<!-- ex1.GEE_ind <- gee(Y ~ X + occasion, data = ex1.data, id = id, family = gaussian(), corstr = "independence") -->
<!-- ex1.GEE_ar <- gee(Y ~ X + occasion, data = ex1.data, id = id, family = gaussian(), corstr = "AR-M") -->
<!-- ex1.GEE_uns <- gee(Y ~ X + occasion, data = ex1.data, id = id, family = gaussian(), corstr = "unstructured") -->
<!-- ex1.GEE_fixed <- gee(Y ~ X + occasion, data = ex1.data, id = id, family = gaussian(), corstr = "fixed") -->
<!-- ``` -->

<!-- Let's compare the point estimates -->

<!-- ```{r} -->
<!-- fixef(ex1.MLM_reml) -->
<!-- fixef(ex1.MLM_mle) -->
<!-- coef(ex1.GEE) -->
<!-- ``` -->

<!-- The point estimates are identical (to 7 decimals) both (1) within the two MLM approaches and (2) between MLM and GEE. -->

<!-- ## Example 2: Continuous, X (occasion level) on Y (occasion level) -->

<!-- Let's draw a DAG where we are estimating the effect of $X_t$ (sleep-problems) on $Y_t$ (anxiety) -->

<!-- ```{r} -->
<!-- dag <- dagitty('dag { -->
<!--   X_t -> Y_t -->
<!-- }') -->

<!-- plot(dag) -->
<!-- ``` -->

<!-- Let's specify the structural causal model (SCM) for the drawn DAG -->

<!-- $$X_{i,t} := \mathcal{N}(5, 1) \quad \text{for} \quad i = 1, \ldots, n_{\text{individuals}} \quad \text{and} \quad t = 1, \ldots, n_{\text{measurements}}$$ $$Y_{i,t} := 2 + 0.6 \cdot X_{i,t} + \epsilon_{i,t} \quad \text{for} \quad i = 1, \ldots, n_{\text{individuals}} \quad \text{and} \quad t = 1, \ldots, n_{\text{measurements}}$$ where $\epsilon_{i,t}$ follows a multivariate normal distribution with mean zero and an exchangeable correlation structure across time points $t$: $$\epsilon_{i,1}, \ldots, \epsilon_{i,n_{\text{measurements}}} \sim \mathcal{MVN}(0, \Sigma)$$ The covariance matrix $\Sigma$ has the form: -->

<!-- $$\Sigma = \begin{bmatrix} 1 & \rho & \cdots & \rho \\ \rho & 1 & \cdots & \rho \\ \vdots & \vdots & \ddots & \vdots \\ \rho & \rho & \cdots & 1 \end{bmatrix}$$ with $\rho = 0.7$, representing the exchangeable correlation structure between the errors at different time points within an individual. -->

<!-- ```{r} -->
<!-- # Parameters -->
<!-- set.seed(123)  # For reproducibility -->
<!-- n_individuals <- 100  # Number of individuals -->
<!-- n_measurements <- 5   # Number of measurements per individual -->
<!-- rho <- 0.7  # Correlation between measurements within an individual -->

<!-- # Generate occasion level predictors (X) -->
<!-- X <- rnorm(n_individuals * n_measurements, mean = 5, sd = 1) -->

<!-- # Correlation matrix (exchangeable structure) -->
<!-- corr_matrix <- matrix(rho, n_measurements, n_measurements) -->
<!-- diag(corr_matrix) <- 1  # Diagonal is 1 -->

<!-- # Simulate repeated measures for each individual -->
<!-- ex2.data <- data.frame() -->
<!-- for (i in 1:n_individuals) { -->
<!--   # Generate errors with the working correlation structure -->
<!--   epsilon_Y <- mvrnorm(1, mu = rep(0, n_measurements), Sigma = corr_matrix) -->

<!--   # Generate Y for this individual across measurement occasions -->
<!--   Y <- 2 + 0.6 * X[(i - 1) * n_measurements + 1:(n_measurements)] + epsilon_Y -->

<!--   # Store the data -->
<!--   individual_data <- data.frame( -->
<!--     id = i, -->
<!--     occasion = 1:n_measurements, -->
<!--     X = X[(i - 1) * n_measurements + 1:(n_measurements)], -->
<!--     Y = Y -->
<!--   ) -->

<!--   ex2.data <- rbind(ex2.data, individual_data) -->
<!-- } -->

<!-- # Make sure first timepoint is zero -->
<!-- ex2.data$occasion <- ex2.data$occasion - 1 -->

<!-- head(ex2.data) -->
<!-- ``` -->

<!-- Let's estimate the effect of $X$ on $Y$ using MLM -->

<!-- ```{r} -->
<!-- # Model 1a: Intercept only model, random intercept  -->
<!-- ex2.MLM1a <- lmer(Y ~ 1 + (1 | id), data = ex2.data, REML = FALSE)  -->

<!-- # Model 1b: Intercept only model including the predictor time  -->
<!-- ex2.MLM1b <- lmer(Y ~ 1 + occasion + (1 | id), data = ex2.data, REML = FALSE)  -->
<!-- anova(ex2.MLM1a, ex2.MLM1b) # Model 1a is not significantly worse than Model 1b -->

<!-- # Model 2: including remainder of the level 1 predictors  -->
<!-- ex2.MLM2 <- lmer(Y ~ 1 + occasion + X + (1 | id), data = ex2.data, REML = FALSE) -->
<!-- anova(ex2.MLM1b, ex2.MLM2) # Model 1b is significantly worse than Model 2 -->

<!-- # Model 3.1: random slope for time (and add covariance) -->
<!-- ex2.MLM3.1 <- lmer(Y ~ 1 + occasion + X + (occasion | id), data = ex2.data, REML = FALSE) -->
<!-- anova(ex2.MLM2, ex2.MLM3.1) # Model 2 is not significantly worse than Model 3.1 -->

<!-- # Model 3.2: random slope for X (and add covariance) -->
<!-- ex2.MLM3.2 <- lmer(Y ~ 1 + occasion + X + (X | id), data = ex2.data, REML = FALSE) -->
<!-- anova(ex2.MLM2, ex2.MLM3.2) # Model 2 not is significantly worse than Model 3.2 -->
<!-- ``` -->

<!-- Following the results of the model comparison, we will continue with model 2, which includes the fixed effect of $X$ and the random intercept for each individual. -->

<!-- ```{r} -->
<!-- # Model 2 -->
<!-- ex2.MLM2_mle <- lmer(Y ~ 1 + occasion + X + (1 | id), data = ex2.data, REML = FALSE) -->
<!-- ex2.MLM2_reml <- lmer(Y ~ 1 + occasion + X + (1 | id), data = ex2.data) -->
<!-- ``` -->

<!-- Let's estimate the effect of $X$ on $Y$ using GEE -->

<!-- ```{r} -->
<!-- # displays initial regression estimate of GLM -->
<!-- ex2.GEE <- gee(Y ~ X, data = ex2.data, id = id, family = gaussian(), corstr = "exchangeable") -->
<!-- # summary(ex2.GEE) -->
<!-- ``` -->

<!-- Let's compare the point estimates -->

<!-- ```{r} -->
<!-- fixef(ex2.MLM2_reml) -->
<!-- fixef(ex2.MLM2_mle) -->
<!-- coef(ex2.GEE) -->
<!-- ``` -->

<!-- There is a minor difference between the point estimates of (1) the two MLM approaches (from 4th decimal) and (2) between MLM and GEE (from 4th decimal). -->
