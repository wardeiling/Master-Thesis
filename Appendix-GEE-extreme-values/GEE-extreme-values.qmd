---
title: "GEE-extreme-values"
format: html
---

```{r}
library(here)
library(tidyverse)
```

For GEE, we found extreme values.

```{r}
# checking how many GEEs yielded extreme values
runname <- "April18_fullsimulation_combined"

# read in the final data frame
final_df <- readRDS(paste0("simulation_results/", runname, "/plotting_bias_df.RDS"))

# scenario 1
GEE_check_df <- final_df %>%
  # remove columns ending with "g.01", "X", "X.cent", "X.cluster.means"
  select(-ends_with("_g.01_bias"), -ends_with("_X"), -ends_with("_X.cent"), -ends_with("_X.cluster.means")) %>%
  pivot_longer(cols = ends_with("_g.10_bias"),
               names_to = "model", values_to = "beta1_bias") %>%
  mutate(
    model = str_remove(model, "_g.10_bias"),
    model = factor(model, levels = c("l1", "l2", "l3a", "l4", 
                                     "g.exchangeable1", "g.ar11", "g.independence1",
                                     "g.exchangeable2", "g.ar12", "g.independence2", 
                                     "g.exchangeable3", "g.ar13", "g.independence3", 
                                     "g.exchangeable4", "g.ar14", "g.independence4"))) %>%
  # select only the GEE models
  filter(model %in% c("g.exchangeable1", "g.ar11", "g.independence1",
                      "g.exchangeable2", "g.ar12", "g.independence2", 
                      "g.exchangeable3", "g.ar13", "g.independence3", 
                      "g.exchangeable4", "g.ar14", "g.independence4")) 


# define a threshold for "extreme" bias
threshold1 <- 1E+11  # can also be set to 5, doesn't affect the number of extreme values
threshold2 <- 20  # can also be set to 5, doesn't affect the number of extreme values

# create a table with the number of extreme scenarios per model
extreme_count_df <- GEE_check_df %>%
  group_by(model, predictor.type, outcome.type) %>%
  summarize(
    num_extreme1 = sum(abs(beta1_bias) > threshold1),
    num_extreme2 = sum(abs(beta1_bias) > threshold2),
    .groups = "drop"
  ) %>%
  arrange(desc(num_extreme1))

# check whether the counts are the same
extreme_count_df %>%
  filter(num_extreme1 != num_extreme2) %>%
  select(model, predictor.type, outcome.type, num_extreme1, num_extreme2)
```


```{r}
# create a table with the proportion of extreme scenarios per model
extreme_prop_df <- GEE_check_df %>%
  group_by(model, design_id) %>%
  summarize(
    proportion_extreme1 = mean(abs(beta1_bias) > threshold1),
    proportion_extreme2 = mean(abs(beta1_bias) > threshold2),
    .groups = "drop"
  ) 

# check whether the proportions are the same
extreme_prop_df %>%
  filter(proportion_extreme1 != proportion_extreme2) %>%
  select(model, design_id, proportion_extreme1, proportion_extreme2)

# count number of unique design_ids
length(unique(extreme_prop_df$design_id))

# compute min and max
min(extreme_prop_df$proportion_extreme)
max(extreme_prop_df$proportion_extreme)

# plot a density plot of extreme values wrapped by model
ggplot(extreme_prop_df, aes(x = proportion_extreme, fill = model)) +
  geom_density(alpha = 0.5) +
  labs(x = "Proportion of extreme values", y = "Density") +
  theme_bw() +
  theme(legend.position = "bottom") +
  facet_wrap(~ model, ncol = 3)
```


```{r}
# create a table with the number of extreme scenarios per model
extreme_count_df <- GEE_check_df %>%
  group_by(model, predictor.type, outcome.type) %>%
  summarize(
    num_extreme1 = sum(abs(beta1_bias) > threshold1),
    num_extreme2 = sum(abs(beta1_bias) > threshold2),
    .groups = "drop"
  ) %>%
  arrange(desc(num_extreme1))

# check whether the counts are the same
extreme_count_df %>%
  filter(num_extreme1 != num_extreme2) %>%
  select(model, predictor.type, outcome.type, num_extreme1, num_extreme2)
```

```{r}
# take the setting with most frequent extreme values (design_id = 299 and g.ar12) and plot the density of bias
plot1 <- GEE_check_df %>%
  filter(design_id == 299, model == "g.ar12") %>%
  ggplot(aes(x = beta1_bias)) +
  geom_density() +
  labs(x = "Bias", y = "Density") +
  theme_bw() +
  xlim(-5, 5) +
  theme(legend.position = "bottom")

# g.ar12
# 300
plot2 <- GEE_check_df %>%
  filter(design_id == 300, model == "g.ar12") %>%
  ggplot(aes(x = beta1_bias)) +
  geom_density() +
  labs(x = "Bias", y = "Density") +
  theme_bw() +
  xlim(-5, 5) +
  theme(legend.position = "bottom")

# g.ar12
# 353
plot3 <- GEE_check_df %>%
  filter(design_id == 353, model == "g.ar12") %>%
  ggplot(aes(x = beta1_bias)) +
  geom_density() +
  labs(x = "Bias", y = "Density") +
  theme_bw() +
  xlim(-5, 5) +
  theme(legend.position = "bottom")

# g.ar12
# 354
plot4 <- GEE_check_df %>%
  filter(design_id == 354, model == "g.ar12") %>%
  ggplot(aes(x = beta1_bias)) +
  geom_density() +
  labs(x = "Bias", y = "Density") +
  theme_bw() +
  xlim(-5, 5) +
  theme(legend.position = "bottom")

# g.ar13
# 263
plot5 <- GEE_check_df %>%
  filter(design_id == 263, model == "g.ar13") %>%
  ggplot(aes(x = beta1_bias)) +
  geom_density() +
  labs(x = "Bias", y = "Density") +
  theme_bw() +
  xlim(-5, 5) +
  theme(legend.position = "bottom")

# g.ar14
# 263
plot6 <- GEE_check_df %>%
  filter(design_id == 263, model == "g.ar14") %>%
  ggplot(aes(x = beta1_bias)) +
  geom_density() +
  labs(x = "Bias", y = "Density") +
  theme_bw() +
  xlim(-5, 5) +
  theme(legend.position = "bottom")

# combine plots
library(patchwork)
combined_plot <- (plot1 + plot2) / (plot3 + plot4) / (plot5 + plot6)
combined_plot
```

